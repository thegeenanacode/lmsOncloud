package com.lmsoncloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GradebookAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGradebookAllPropertiesEquals(Gradebook expected, Gradebook actual) {
        assertGradebookAutoGeneratedPropertiesEquals(expected, actual);
        assertGradebookAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGradebookAllUpdatablePropertiesEquals(Gradebook expected, Gradebook actual) {
        assertGradebookUpdatableFieldsEquals(expected, actual);
        assertGradebookUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGradebookAutoGeneratedPropertiesEquals(Gradebook expected, Gradebook actual) {
        assertThat(expected)
            .as("Verify Gradebook auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGradebookUpdatableFieldsEquals(Gradebook expected, Gradebook actual) {
        assertThat(expected)
            .as("Verify Gradebook relevant properties")
            .satisfies(e -> assertThat(e.getGradeType()).as("check gradeType").isEqualTo(actual.getGradeType()))
            .satisfies(e -> assertThat(e.getGradeValue()).as("check gradeValue").isEqualTo(actual.getGradeValue()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(actual.getLastModifiedBy()))
            .satisfies(e -> assertThat(e.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(actual.getLastModifiedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGradebookUpdatableRelationshipsEquals(Gradebook expected, Gradebook actual) {
        assertThat(expected)
            .as("Verify Gradebook relationships")
            .satisfies(e -> assertThat(e.getStudent()).as("check student").isEqualTo(actual.getStudent()));
    }
}
